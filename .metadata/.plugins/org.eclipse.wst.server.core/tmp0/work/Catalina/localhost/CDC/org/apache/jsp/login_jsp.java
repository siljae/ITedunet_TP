/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.56
 * Generated at: 2023-02-19 05:58:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintWriter;
import mvc.model.memberDAO;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("mvc.model.memberDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
	
	//로그인 실패
	String error = request.getParameter("error");
	if (error != null) {
		PrintWriter script = response.getWriter();
		script.println("<script>");
		script.println("alert('이메일과 비밀번호가 일치하지 않습니다')");
		script.println("history.back()");
		script.println("</script>");
		
	}
	//회원가입 성공
	String msg = request.getParameter("msg");
	System.out.println("msg: "+msg);
	if(msg == null){}
	else if(msg.equals("1")){
		System.out.println("여기로 오나");
		PrintWriter script = response.getWriter();
		script.println("<script>");
		script.println("alert('회원가입을 축하드립니다! 로그인해주세요!')");
		script.println("</script>");
	}


      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./resources/css/login.css\">\r\n");
      out.write("    <script>\r\n");
      out.write("        function show()\r\n");
      out.write("        {\r\n");
      out.write("            var show = document.getElementById(\"email\");\r\n");
      out.write("            if(show.style.display=='none'){\r\n");
      out.write("                show.style.display = 'block';\r\n");
      out.write("            }\r\n");
      out.write("            else{\r\n");
      out.write("                show.style.display = 'none';\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("    <title>login</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <section>\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <div class=\"login_box\">\r\n");
      out.write("                <div class=\"login_logo\">\r\n");
      out.write("                    <a href=\"./index.jsp\"><img src=\"./resources/img/logo3.png\" alt=\"Logo\"></a>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"login_text\">로그인</div>\r\n");
      out.write("                <div class=\"login_text2\">간편하게 SNS 로그인</div>\r\n");
      out.write("                <div class=\"login_snsbox\">\r\n");
      out.write("                    <div class=\"sns_naver\">\r\n");
      out.write("                        <a href=\"#\">\r\n");
      out.write("                            <img src=\"./resources/img/login/naver_logo.png\" alt=\"naver\">\r\n");
      out.write("                            <p>네이버로 로그인</p>\r\n");
      out.write("                        </a>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"sns_facebook\">\r\n");
      out.write("                        <a href=\"#\">\r\n");
      out.write("                            <img src=\"./resources/img/login/facebook_logo.JPG\" alt=\"facebook\">\r\n");
      out.write("                            <p>페이스북으로 로그인</p>\r\n");
      out.write("                        </a>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"sns_google\">\r\n");
      out.write("                        <a href=\"#\">\r\n");
      out.write("                            <img src=\"./resources/img/login/google_logo.png\" alt=\"google\">\r\n");
      out.write("                            <p>구글로 로그인</p>\r\n");
      out.write("                        </a>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"hr\"></div>\r\n");
      out.write("            <button class=\"login_email\" onclick=\"show()\">이메일로 로그인</button>\r\n");
      out.write("            <div class=\"email_box\" id=\"email\">\r\n");
      out.write("                <form action=\"./loginaction.do\" method=\"post\">\r\n");
      out.write("                    <input type=\"email\" class=\"email\" name=\"email\" placeholder=\"이메일\" required>\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <input type=\"password\" class=\"pw\" name=\"pw\" placeholder=\"비밀번호\" required>\r\n");
      out.write("                    <br>                    \r\n");
      out.write("                    <input type=\"submit\" class=\"email_login_box\" value=\"로그인\">                    \r\n");
      out.write("                </form>\r\n");
      out.write("                <br>\r\n");
      out.write("                <a onclick=\"window.open('pw_search.html','_blank','width=500,height=200,top=200,left=200')\">비밀번호 찾기</a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"sign\">\r\n");
      out.write("                <a href=\"./signup.do\">회원가입</a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
