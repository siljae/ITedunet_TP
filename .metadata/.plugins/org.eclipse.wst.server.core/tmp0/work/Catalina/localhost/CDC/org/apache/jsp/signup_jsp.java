/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.56
 * Generated at: 2023-02-19 06:18:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class signup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./resources/css/signup.css\">\r\n");
      out.write("    <!-- 카카오 우편번호 API -->\r\n");
      out.write("    <script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("	    function execDaumPostcode() {\r\n");
      out.write("	        new daum.Postcode({\r\n");
      out.write("	            oncomplete: function(data) {\r\n");
      out.write("	                document.querySelector(\"#postcode\").value = data.zonecode;\r\n");
      out.write("	                document.querySelector(\"#address\").value = data.address\r\n");
      out.write("	            }\r\n");
      out.write("	        }).open();\r\n");
      out.write("	    }\r\n");
      out.write("	</script>\r\n");
      out.write("    <script>\r\n");
      out.write("    	//전체 동의 눌리면 하위체크박스 같이 눌러지게 하기\r\n");
      out.write("        function selectAll(selectAll){\r\n");
      out.write("            const checkboxes = document.getElementsByName('agree');\r\n");
      out.write("            checkboxes.forEach((checkbox) =>{checkbox.checked = selectAll.checked;} )\r\n");
      out.write("        }\r\n");
      out.write("    	//하위 체크박스 중 하나라도 체크가 취소되면 전체체크박스의 체크 취소되기\r\n");
      out.write("        function checkselectAll()  {\r\n");
      out.write("            // 전체 체크박스\r\n");
      out.write("            const checkboxes \r\n");
      out.write("                = document.querySelectorAll('input[name=\"agree\"]');\r\n");
      out.write("            // 선택된 체크박스\r\n");
      out.write("            const checked \r\n");
      out.write("                = document.querySelectorAll('input[name=\"agree\"]:checked');\r\n");
      out.write("            // select all 체크박스\r\n");
      out.write("            const selectAll \r\n");
      out.write("                = document.querySelector('input[name=\"allagree\"]');\r\n");
      out.write("            \r\n");
      out.write("            if(checkboxes.length === checked.length)  {\r\n");
      out.write("                selectAll.checked = true;\r\n");
      out.write("            }else {\r\n");
      out.write("                selectAll.checked = false;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    	\r\n");
      out.write("    	function chkemail(){\r\n");
      out.write("    		var v = document.getElementById('email').value;\r\n");
      out.write("    		window.open(\"check_email.jsp?email=\"+v,'_blank','width=500,height=300,top=200,left=200');\r\n");
      out.write("    	}\r\n");
      out.write("    	function chkname(){\r\n");
      out.write("    		var v = document.getElementById('name').value;\r\n");
      out.write("    		window.open(\"check_name.jsp?name=\"+v,'_blank','width=500,height=300,top=200,left=200');\r\n");
      out.write("    	}\r\n");
      out.write("    </script>\r\n");
      out.write("    <title>회원가입</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <section>\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <div class=\"header\">\r\n");
      out.write("                <h1>회원가입</h1>\r\n");
      out.write("                <div class=\"hr1\"></div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <form action=\"./signupaction.do\" method=\"post\">\r\n");
      out.write("                <div class=\"input_box\">\r\n");
      out.write("                    <p>\r\n");
      out.write("                        이메일\r\n");
      out.write("                        <input type=\"email\" name=\"email\" id=\"email\" class=\"email\"   required>\r\n");
      out.write("                        <input type=\"button\" onclick=\"chkemail()\" class=\"email_check\" value=\"중복확인\">\r\n");
      out.write("                    </p>\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <p>\r\n");
      out.write("                        비밀번호\r\n");
      out.write("                        <input type=\"password\" name=\"pw\" class=\"pw\" required placeholder=\"ex)비밀번호양식\">\r\n");
      out.write("                    </p>\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <p>\r\n");
      out.write("                        비밀번호확인\r\n");
      out.write("                        <input type=\"password\" class=\"pw2\" required>\r\n");
      out.write("                    </p>\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <p>\r\n");
      out.write("                        닉네임\r\n");
      out.write("                        <input type=\"text\" name=\"name\" id=\"name\" class=\"name\"  required>                    \r\n");
      out.write("                        <input type=\"button\" onclick=\"chkname()\" class=\"name_check\" value=\"중복확인\">\r\n");
      out.write("                    </p>\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <p>\r\n");
      out.write("                        전화번호\r\n");
      out.write("                        <input type=\"text\" id=\"num1\" name=\"phone1\" class=\"num1\" value=\"010\" size=\"1\" readonly>\r\n");
      out.write("                        <span>-</span>\r\n");
      out.write("                        <input type=\"text\" id=\"num2\" name=\"phone2\" class=\"num2\" maxlength=\"4\" pattern=\"[0-9]{4}\" size=\"4\" title=\"'1234와 같은 4자리 숫자'\" required>                        \r\n");
      out.write("                        <span>-</span>\r\n");
      out.write("                        <input type=\"text\" id=\"num3\" name=\"phone3\" class=\"num3\" pattern=\"[0-9]{4}\" size=\"4\" title=\"'1234와 같은 4자리 숫자'\" maxlength=\"4\" required>\r\n");
      out.write("                    </p>\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <p>\r\n");
      out.write("                        주소\r\n");
      out.write("                        <input type=\"text\" id=\"postcode\" name=\"post\" class=\"addr1\" readonly=\"readonly\">\r\n");
      out.write("                        <input type=\"button\" onclick=\"execDaumPostcode()\" class=\"postbox\" name=\"post\" value=\"우편번호\">\r\n");
      out.write("                    </p>\r\n");
      out.write("                    <p>\r\n");
      out.write("                        <input type=\"text\" id=\"address\" name=\"addr1\" class=\"addr2\" size =\"30\" readonly=\"readonly\">\r\n");
      out.write("                    </p>\r\n");
      out.write("                    <p>\r\n");
      out.write("                        <input type=\"text\" id=\"detailadress\" name=\"addr2\" class=\"addr3\" size =\"30\"  placeholder=\"상세주소\">\r\n");
      out.write("                    </p>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"sub_header\">\r\n");
      out.write("                    <h3>약관동의</h3>\r\n");
      out.write("                    <div class=\"hr2\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"agreebox\">\r\n");
      out.write("                    <div class=\"allagree_box\">\r\n");
      out.write("                        <label for=\"allagree\" class=\"s_pointer\">회원가입 약관에 모두 동의합니다</label>  \r\n");
      out.write("                        <input type=\"checkbox\" id=\"allagree\" name=\"allagree\" class=\"allagree_input s_pointer\" onclick=\"selectAll(this)\">              \r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"hr3\"></div>\r\n");
      out.write("                    <div class=\"a_agree_box\">\r\n");
      out.write("                        <label for=\"a_agree\" class=\"s_pointer\"><a href=\"#\">이용약관 동의<span class=\"a_as\">[필수]</span></a></label>\r\n");
      out.write("                        <input type=\"checkbox\"  id=\"a_agree\" name=\"agree\" class=\"a_agree_input s_pointer\" onclick=\"checkselectAll()\">                        \r\n");
      out.write("                    </div>\r\n");
      out.write("                    <textarea name=\"agreebox\" class=\"agreebox\"  cols=\"58\" rows=\"5\" readonly>나중에 이용약관 넣을 것\r\n");
      out.write("                    </textarea>\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <div class=\"b_agree_box\">\r\n");
      out.write("                        <label for=\"b_agree\" class=\"s_pointer\"><a href=\"#\">개인정보 수집 및 이용 동의<span class=\"b_as\">[필수]</span></a></label>\r\n");
      out.write("                        <input type=\"checkbox\"  id=\"b_agree\" name=\"agree\" class=\"b_agree_input s_pointer\" onclick=\"checkselectAll()\" >\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <textarea name=\"agreebox\" class=\"agreebox\"  cols=\"58\" rows=\"5\" readonly>나중에 개인정보 수집 및 이용 동의 넣을 것\r\n");
      out.write("                    </textarea>\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <div class=\"sign_submit\">\r\n");
      out.write("                        <input type=\"submit\" value=\"가입하기\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
